"""
Exploit Mitigation Bypass Module

Implements techniques to bypass modern exploit mitigations including
CFI, CET, DEP, ASLR, and other security features.
"""

from .cfi_bypass import CFIBypass
from ..shared.bypass_config import BypassConfig

# Stub classes for missing modules
class ASLRBypass:
    """ASLR Bypass stub."""
    def __init__(self):
        pass
    
    def bypass(self):
        return {'success': False, 'error': 'Not implemented'}

class CETBypass:
    """CET Bypass stub."""
    def __init__(self):
        pass
    
    def bypass(self):
        return {'success': False, 'error': 'Not implemented'}

class CFGBypass:
    """CFG Bypass stub."""
    def __init__(self):
        pass
    
    def bypass(self):
        return {'success': False, 'error': 'Not implemented'}

class DEPBypass:
    """DEP Bypass stub."""
    def __init__(self):
        pass
    
    def bypass(self):
        return {'success': False, 'error': 'Not implemented'}

# Use shared bypass configuration for consistency
def get_available_bypasses():
    """Get list of available bypass types."""
    return BypassConfig.get_available_bypasses()

def analyze_bypass_capabilities(target_info):
    """Analyze available bypass capabilities for a target."""
    return BypassConfig.analyze_bypass_capabilities(target_info)

__all__ = [
    'CFIBypass',
    'CETBypass', 
    'ASLRBypass',
    'DEPBypass',
    'CFGBypass',
    'BypassConfig',
    'get_available_bypasses',
    'analyze_bypass_capabilities'
]
