
# Dynamic path discovery for tools
def find_tool_path(tool_name, default_path):
    """Dynamically find tool installation path."""
    
    if tool_name == "ghidra":
        # Check GHIDRA_HOME first
        ghidra_home = os.environ.get('GHIDRA_HOME')
        if ghidra_home:
            ghidra_run = os.path.join(ghidra_home, 'ghidraRun.bat' if os.name == 'nt' else 'ghidraRun')
            if os.path.exists(ghidra_run):
                return ghidra_run
        
        # Check Chocolatey
        choco_path = r"C:\ProgramData\chocolatey\lib\ghidra\tools"
        if os.path.exists(choco_path):
            for item in os.listdir(choco_path):
                if item.startswith('ghidra_'):
                    ghidra_run = os.path.join(choco_path, item, 'ghidraRun.bat')
                    if os.path.exists(ghidra_run):
                        return ghidra_run
    
    elif tool_name == "radare2":
        # Check if r2 is in PATH
        import shutil
        r2_path = shutil.which('r2')
        if r2_path:
            return r2_path
        
        # Check R2_HOME
        r2_home = os.environ.get('R2_HOME')
        if r2_home:
            r2_exe = os.path.join(r2_home, 'bin', 'radare2.exe' if os.name == 'nt' else 'radare2')
            if os.path.exists(r2_exe):
                return r2_exe
    
    # Return default if nothing found
    return default_path

# Update DEFAULT_CONFIG to use dynamic discovery
DEFAULT_CONFIG["ghidra_path"] = find_tool_path("ghidra", DEFAULT_CONFIG["ghidra_path"])
DEFAULT_CONFIG["radare2_path"] = find_tool_path("radare2", DEFAULT_CONFIG["radare2_path"])
